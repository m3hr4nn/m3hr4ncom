<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>m3hr4n.com</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on m3hr4n.com</description>
    <generator>Hugo -- 0.147.6</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 01 Jun 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>My First Post</title>
      <link>http://localhost:1313/posts/my-first-post/</link>
      <pubDate>Sun, 01 Jun 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/my-first-post/</guid>
      <description>&lt;p&gt;This is the content of my first blog post!&lt;/p&gt;</description>
    </item>
    <item>
      <title>AI News Feed</title>
      <link>http://localhost:1313/tools/ainews/ainews-v1/</link>
      <pubDate>Sat, 31 May 2025 12:00:00 +0000</pubDate>
      <guid>http://localhost:1313/tools/ainews/ainews-v1/</guid>
      <description>&lt;div id=&#34;news-feed&#34; style=&#34;max-width: 900px; margin: 2rem auto; font-family: Arial, sans-serif;&#34;&gt;
  &lt;!-- NewsAPI Section --&gt;
  &lt;h3 style=&#34;margin-bottom: 1rem; text-align: center;&#34;&gt;NewsAPI&lt;/h3&gt;
  &lt;table style=&#34;width: 100%; border-collapse: separate; border-spacing: 1rem;&#34; id=&#34;newsapi&#34;&gt;&lt;/table&gt;
  &lt;div style=&#34;text-align: center; margin-bottom: 2rem;&#34;&gt;
    &lt;button onclick=&#34;loadMoreNewsAPI()&#34; style=&#34;padding: 0.5rem 1rem; border: none; border-radius: 4px; background-color: #007acc; color: white; cursor: pointer;&#34;&gt;+ More NewsAPI&lt;/button&gt;
  &lt;/div&gt;
  &lt;!-- GNews Section --&gt;
  &lt;h3 style=&#34;margin-top: 3rem; margin-bottom: 1rem; text-align: center;&#34;&gt;GNews&lt;/h3&gt;
  &lt;table style=&#34;width: 100%; border-collapse: separate; border-spacing: 1rem;&#34; id=&#34;gnews&#34;&gt;&lt;/table&gt;
  &lt;div style=&#34;text-align: center;&#34;&gt;
    &lt;button onclick=&#34;loadMoreGNews()&#34; style=&#34;padding: 0.5rem 1rem; border: none; border-radius: 4px; background-color: #007acc; color: white; cursor: pointer;&#34;&gt;+ More GNews&lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;style&gt;
  .news-image {
    width: 90px;
    height: 90px;
    object-fit: cover;
    border-radius: 6px;
  }

  .news-title {
    font-weight: bold;
    font-size: 0.95rem;
    color: var(--link-color, #007acc);
    text-decoration: none;
    display: block;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 100%;
  }

  .news-description {
    font-size: 0.85rem;
    color: var(--text-color, #444);
    margin-top: 0.3rem;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 100%;
  }

  @media (prefers-color-scheme: dark) {
    .news-description {
      color: #bbb;
    }
    .news-title {
      color: #4fc3f7;
    }
  }
&lt;/style&gt;
&lt;script&gt;
  const newsApiKey = &#34;e0a7c73f5dfe49ec8b4061e085d73ec8&#34;;
  const gnewsApiKey = &#34;a2eb63380a75f0c1fe3e20b1963bc278&#34;;

  let newsApiPage = 1;
  let gnewsPage = 1;
  const pageSize = 3;

  async function loadMoreNewsAPI() {
    const url = `https://newsapi.org/v2/everything?q=artificial%20intelligence&amp;pageSize=${pageSize}&amp;page=${newsApiPage}&amp;sortBy=publishedAt&amp;apiKey=${newsApiKey}`;
    try {
      const res = await fetch(url);
      const data = await res.json();
      const html = data.articles.map(article =&gt; `
        &lt;tr&gt;
          &lt;td style=&#34;width: 100px; vertical-align: top;&#34;&gt;
            &lt;img src=&#34;${article.urlToImage || &#39;https://via.placeholder.com/90&#39;}&#34; alt=&#34;News Image&#34; class=&#34;news-image&#34;&gt;
          &lt;/td&gt;
          &lt;td&gt;
            &lt;a href=&#34;${article.url}&#34; class=&#34;news-title&#34; target=&#34;_blank&#34;&gt;${article.title}&lt;/a&gt;
            &lt;div class=&#34;news-description&#34;&gt;${article.description || &#39;&#39;}&lt;/div&gt;
          &lt;/td&gt;
        &lt;/tr&gt;
      `).join(&#39;&#39;);
      document.getElementById(&#39;newsapi&#39;).insertAdjacentHTML(&#39;beforeend&#39;, html);
      newsApiPage++;
    } catch (err) {
      console.error(&#34;NewsAPI fetch error:&#34;, err);
    }
  }

  async function loadMoreGNews() {
    const url = `https://gnews.io/api/v4/search?q=AI&amp;lang=en&amp;max=${pageSize}&amp;page=${gnewsPage}&amp;token=${gnewsApiKey}`;
    try {
      const res = await fetch(url);
      const data = await res.json();
      const html = data.articles.map(article =&gt; `
        &lt;tr&gt;
          &lt;td style=&#34;width: 100px; vertical-align: top;&#34;&gt;
            &lt;img src=&#34;${article.image || &#39;https://via.placeholder.com/90&#39;}&#34; alt=&#34;News Image&#34; class=&#34;news-image&#34;&gt;
          &lt;/td&gt;
          &lt;td&gt;
            &lt;a href=&#34;${article.url}&#34; class=&#34;news-title&#34; target=&#34;_blank&#34;&gt;${article.title}&lt;/a&gt;
            &lt;div class=&#34;news-description&#34;&gt;${article.description || &#39;&#39;}&lt;/div&gt;
          &lt;/td&gt;
        &lt;/tr&gt;
      `).join(&#39;&#39;);
      document.getElementById(&#39;gnews&#39;).insertAdjacentHTML(&#39;beforeend&#39;, html);
      gnewsPage++;
    } catch (err) {
      console.error(&#34;GNews fetch error:&#34;, err);
    }
  }

  // Initial Load
  loadMoreNewsAPI();
  loadMoreGNews();
&lt;/script&gt;</description>
    </item>
    <item>
      <title>Jalali-Gregorian Date Converter</title>
      <link>http://localhost:1313/tools/jcal-gcal/jcal-gcal-v1/</link>
      <pubDate>Sat, 31 May 2025 12:00:00 +0000</pubDate>
      <guid>http://localhost:1313/tools/jcal-gcal/jcal-gcal-v1/</guid>
      <description>&lt;style&gt;
  #converter {
    max-width: 800px;
    margin: 20px auto;
    font-family: Arial, sans-serif;
    color: var(--body-color);
  }

  table {
    width: 100%;
    border-collapse: separate;
    border-spacing: 40px 10px;
  }

  td {
    vertical-align: top;
    width: 50%;
  }

  label {
    font-weight: bold;
  }

  input {
    width: 100%;
    padding: 8px;
    margin-top: 4px;
    margin-bottom: 12px;
    border: 1px solid #ccc;
    border-radius: 4px;
    background-color: var(--theme);
    color: var(--body-color);
  }

  button {
    background-color: #007acc;
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 16px;
  }

  button:hover {
    background-color: #005a99;
  }

  .result {
    margin-top: 10px;
    font-size: 16px;
    color: var(--body-color);
  }

  .error {
    color: red;
    font-weight: bold;
    margin-top: 8px;
  }
&lt;/style&gt;

&lt;div id=&#34;converter&#34;&gt;
  &lt;h2&gt;Jalali - Gregorian Date Converter&lt;/h2&gt;

  &lt;table&gt;
    &lt;tr&gt;
      &lt;!-- Gregorian to Jalali --&gt;
      &lt;td&gt;
        &lt;label for=&#34;gregorianDate&#34;&gt;Gregorian Date (YYYY/MM/DD):&lt;/label&gt;
        &lt;input type=&#34;text&#34; id=&#34;gregorianDate&#34; placeholder=&#34;e.g. 2025/06/08&#34; /&gt;
        &lt;button onclick=&#34;convertGregorianToJalali()&#34;&gt;Convert to Jalali&lt;/button&gt;
        &lt;div id=&#34;resultG2J&#34; class=&#34;result&#34;&gt;&lt;/div&gt;
        &lt;div id=&#34;errorG2J&#34; class=&#34;error&#34;&gt;&lt;/div&gt;
      &lt;/td&gt;

      &lt;!-- Jalali to Gregorian --&gt;
      &lt;td&gt;
        &lt;label for=&#34;jalaliDate&#34;&gt;Jalali Date (YYYY/MM/DD):&lt;/label&gt;
        &lt;input type=&#34;text&#34; id=&#34;jalaliDate&#34; placeholder=&#34;e.g. 1404/03/18&#34; /&gt;
        &lt;button onclick=&#34;convertJalaliToGregorian()&#34;&gt;Convert to Gregorian&lt;/button&gt;
        &lt;div id=&#34;resultJ2G&#34; class=&#34;result&#34;&gt;&lt;/div&gt;
        &lt;div id=&#34;errorJ2G&#34; class=&#34;error&#34;&gt;&lt;/div&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;script&gt;
  function div(a, b) {
    return Math.floor(a / b);
  }

  function isValidDateFormat(input) {
    return /^\d{4}\/\d{2}\/\d{2}$/.test(input);
  }

  function jalaliToGregorian(jy, jm, jd) {
    jy += 1595;
    let days = -355668 + (365 * jy) + div(jy, 33) * 8 + div((jy % 33) + 3, 4) + jd;

    if (jm &lt; 7) {
      days += (jm - 1) * 31;
    } else {
      days += ((jm - 7) * 30) + 186;
    }

    let gy = 400 * div(days, 146097);
    days %= 146097;

    if (days &gt; 36524) {
      gy += 100 * div(--days, 36524);
      days %= 36524;
      if (days &gt;= 365) days++;
    }

    gy += 4 * div(days, 1461);
    days %= 1461;

    if (days &gt; 365) {
      gy += div(days - 1, 365);
      days = (days - 1) % 365;
    }

    let gd = days + 1;
    let sal_a = [0,31, (gy%4 === 0 &amp;&amp; gy%100 !== 0) || (gy%400 === 0) ? 29 : 28, 31,30,31,30,31,31,30,31,30,31];
    let gm;

    for (gm = 0; gm &lt; 13 &amp;&amp; gd &gt; sal_a[gm]; gm++) {
      gd -= sal_a[gm];
    }

    return { gy, gm, gd };
  }

  function gregorianToJalali(gy, gm, gd) {
    let g_d_m = [0,31, (gy%4 === 0 &amp;&amp; gy%100 !== 0) || (gy%400 === 0) ? 29 : 28, 31,30,31,30,31,31,30,31,30,31];
    let jy = (gy &lt;= 1600) ? 0 : 979;
    gy -= (gy &lt;= 1600) ? 621 : 1600;

    gm = gm - 1;  // Convert to 0-based index for calculation

    let days = (365 * gy) + Math.floor((gy + 3) / 4) - Math.floor((gy + 99) / 100) + Math.floor((gy + 399) / 400);
    for (let i = 0; i &lt; gm; ++i) {
      days += g_d_m[i + 1];  // Skip g_d_m[0]
    }
    days += gd - 1;

    let j_np = Math.floor(days / 12053);
    days %= 12053;

    jy += 33 * j_np + 4 * Math.floor(days / 1461);
    days %= 1461;

    if (days &gt;= 366) {
      jy += Math.floor((days - 1) / 365);
      days = (days - 1) % 365;
    }

    let jm, jd;
    let j_days_in_month = [31,31,31,31,31,31,30,30,30,30,30,29];

    for (jm = 0; jm &lt; 12 &amp;&amp; days &gt;= j_days_in_month[jm]; jm++) {
      days -= j_days_in_month[jm];
    }

    jd = days + 1;
    return { jy, jm: jm + 1, jd };
  }

  function convertJalaliToGregorian() {
    const input = document.getElementById(&#39;jalaliDate&#39;).value.trim().replace(/-/g, &#39;/&#39;);
    const resultDiv = document.getElementById(&#39;resultJ2G&#39;);
    const errorDiv = document.getElementById(&#39;errorJ2G&#39;);
    resultDiv.innerHTML = &#39;&#39;;
    errorDiv.innerHTML = &#39;&#39;;

    if (!isValidDateFormat(input)) {
      errorDiv.innerHTML = &#39;Invalid format. Use YYYY/MM/DD.&#39;;
      return;
    }

    const [jy, jm, jd] = input.split(&#39;/&#39;).map(Number);
    if (jm &lt; 1 || jm &gt; 12 || jd &lt; 1 || jd &gt; 31) {
      errorDiv.innerHTML = &#39;Invalid date values.&#39;;
      return;
    }

    const g = jalaliToGregorian(jy, jm, jd);
    resultDiv.innerHTML = `&lt;strong&gt;Gregorian Date:&lt;/strong&gt; ${g.gy}/${String(g.gm).padStart(2, &#39;0&#39;)}/${String(g.gd).padStart(2, &#39;0&#39;)}`;
  }

  function convertGregorianToJalali() {
    const input = document.getElementById(&#39;gregorianDate&#39;).value.trim().replace(/-/g, &#39;/&#39;);
    const resultDiv = document.getElementById(&#39;resultG2J&#39;);
    const errorDiv = document.getElementById(&#39;errorG2J&#39;);
    resultDiv.innerHTML = &#39;&#39;;
    errorDiv.innerHTML = &#39;&#39;;

    if (!isValidDateFormat(input)) {
      errorDiv.innerHTML = &#39;Invalid format. Use YYYY/MM/DD.&#39;;
      return;
    }

    const [gy, gm, gd] = input.split(&#39;/&#39;).map(Number);
    if (gm &lt; 1 || gm &gt; 12 || gd &lt; 1 || gd &gt; 31) {
      errorDiv.innerHTML = &#39;Invalid date values.&#39;;
      return;
    }

    const j = gregorianToJalali(gy, gm, gd);
    resultDiv.innerHTML = `&lt;strong&gt;Jalali Date:&lt;/strong&gt; ${j.jy}/${String(j.jm).padStart(2, &#39;0&#39;)}/${String(j.jd).padStart(2, &#39;0&#39;)}`;
  }

  document.addEventListener(&#39;DOMContentLoaded&#39;, function () {
    document.getElementById(&#39;jalaliDate&#39;).addEventListener(&#39;keydown&#39;, function(event) {
      if (event.key === &#39;Enter&#39;) {
        event.preventDefault();
        convertJalaliToGregorian();
      }
    });

    document.getElementById(&#39;gregorianDate&#39;).addEventListener(&#39;keydown&#39;, function(event) {
      if (event.key === &#39;Enter&#39;) {
        event.preventDefault();
        convertGregorianToJalali();
      }
    });
  });
&lt;/script&gt;</description>
    </item>
    <item>
      <title>Jalali-Gregorian Date Converter</title>
      <link>http://localhost:1313/tools/jcal-gcal/jcal-gcal/</link>
      <pubDate>Sat, 31 May 2025 12:00:00 +0000</pubDate>
      <guid>http://localhost:1313/tools/jcal-gcal/jcal-gcal/</guid>
      <description>&lt;style&gt;
  #converter {
    max-width: 800px;
    margin: 20px auto;
    font-family: Arial, sans-serif;
    color: var(--body-color);
  }

  table {
    width: 100%;
    border-collapse: separate;
    border-spacing: 40px 10px;
  }

  td {
    vertical-align: top;
    width: 50%;
  }

  label {
    font-weight: bold;
  }

  input {
    width: 100%;
    padding: 8px;
    margin-top: 4px;
    margin-bottom: 12px;
    border: 1px solid #ccc;
    border-radius: 4px;
    background-color: var(--theme);
    color: var(--body-color);
  }

  button {
    background-color: #007acc;
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 16px;
  }

  button:hover {
    background-color: #005a99;
  }

  .result {
    margin-top: 10px;
    font-size: 16px;
    color: var(--body-color);
  }

  .error {
    color: red;
    font-weight: bold;
    margin-top: 8px;
  }
&lt;/style&gt;

&lt;div id=&#34;converter&#34;&gt;
  &lt;h2&gt;Jalali - Gregorian Date Converter&lt;/h2&gt;

  &lt;table&gt;
    &lt;tr&gt;
      &lt;!-- Gregorian to Jalali --&gt;
      &lt;td&gt;
        &lt;label for=&#34;gregorianDate&#34;&gt;Gregorian Date (YYYY/MM/DD):&lt;/label&gt;
        &lt;input type=&#34;text&#34; id=&#34;gregorianDate&#34; placeholder=&#34;e.g. 2025/05/31&#34; /&gt;
        &lt;button onclick=&#34;convertGregorianToJalali()&#34;&gt;Convert to Jalali&lt;/button&gt;
        &lt;div id=&#34;resultG2J&#34; class=&#34;result&#34;&gt;&lt;/div&gt;
        &lt;div id=&#34;errorG2J&#34; class=&#34;error&#34;&gt;&lt;/div&gt;
      &lt;/td&gt;

      &lt;!-- Jalali to Gregorian --&gt;
      &lt;td&gt;
        &lt;label for=&#34;jalaliDate&#34;&gt;Jalali Date (YYYY/MM/DD):&lt;/label&gt;
        &lt;input type=&#34;text&#34; id=&#34;jalaliDate&#34; placeholder=&#34;e.g. 1404/03/10&#34; /&gt;
        &lt;button onclick=&#34;convertJalaliToGregorian()&#34;&gt;Convert to Gregorian&lt;/button&gt;
        &lt;div id=&#34;resultJ2G&#34; class=&#34;result&#34;&gt;&lt;/div&gt;
        &lt;div id=&#34;errorJ2G&#34; class=&#34;error&#34;&gt;&lt;/div&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;

&lt;script&gt;
  function div(a, b) {
    return Math.floor(a / b);
  }

  function isValidDateFormat(input) {
    return /^\d{4}\/\d{2}\/\d{2}$/.test(input);
  }

  function jalaliToGregorian(jy, jm, jd) {
    jy += 1595;
    let days = -355668 + (365 * jy) + div(jy, 33) * 8 + div((jy % 33) + 3, 4) + jd;

    if (jm &lt; 7) {
      days += (jm - 1) * 31;
    } else {
      days += ((jm - 7) * 30) + 186;
    }

    let gy = 400 * div(days, 146097);
    days %= 146097;

    if (days &gt; 36524) {
      gy += 100 * div(--days, 36524);
      days %= 36524;
      if (days &gt;= 365) days++;
    }

    gy += 4 * div(days, 1461);
    days %= 1461;

    if (days &gt; 365) {
      gy += div(days - 1, 365);
      days = (days - 1) % 365;
    }

    let gd = days + 1;
    let sal_a = [0,31, (gy%4 === 0 &amp;&amp; gy%100 !== 0) || (gy%400 === 0) ? 29 : 28, 31,30,31,30,31,31,30,31,30,31];
    let gm;

    for (gm = 0; gm &lt; 13 &amp;&amp; gd &gt; sal_a[gm]; gm++) {
      gd -= sal_a[gm];
    }

    return { gy, gm, gd };
  }

  function gregorianToJalali(gy, gm, gd) {
    let g_d_m = [0,31, (gy%4 === 0 &amp;&amp; gy%100 !== 0) || (gy%400 === 0) ? 29 : 28, 31,30,31,30,31,31,30,31,30,31];
    let jy = (gy &lt;= 1600) ? 0 : 979;
    gy -= (gy &lt;= 1600) ? 621 : 1600;

    let days = (365 * gy) + Math.floor((gy + 3) / 4) - Math.floor((gy + 99) / 100) + Math.floor((gy + 399) / 400);
    for (let i = 0; i &lt; gm; ++i) {
      days += g_d_m[i];
    }
    days += gd - 1;

    let j_np = Math.floor(days / 12053);
    days %= 12053;

    jy += 33 * j_np + 4 * Math.floor(days / 1461);
    days %= 1461;

    if (days &gt;= 366) {
      jy += Math.floor((days - 1) / 365);
      days = (days - 1) % 365;
    }

    let jm, jd;
    let j_days_in_month = [31,31,31,31,31,31,30,30,30,30,30,29];

    for (jm = 0; jm &lt; 12 &amp;&amp; days &gt;= j_days_in_month[jm]; jm++) {
      days -= j_days_in_month[jm];
    }

    jd = days + 1;
    return { jy, jm: jm + 1, jd };
  }

  function convertJalaliToGregorian() {
    const input = document.getElementById(&#39;jalaliDate&#39;).value.trim();
    const resultDiv = document.getElementById(&#39;resultJ2G&#39;);
    const errorDiv = document.getElementById(&#39;errorJ2G&#39;);
    resultDiv.innerHTML = &#39;&#39;;
    errorDiv.innerHTML = &#39;&#39;;

    if (!isValidDateFormat(input)) {
      errorDiv.innerHTML = &#39;Invalid format. Use YYYY/MM/DD.&#39;;
      return;
    }

    const [jy, jm, jd] = input.split(&#39;/&#39;).map(Number);
    if (jm &lt; 1 || jm &gt; 12 || jd &lt; 1 || jd &gt; 31) {
      errorDiv.innerHTML = &#39;Invalid date values.&#39;;
      return;
    }

    const g = jalaliToGregorian(jy, jm, jd);
    resultDiv.innerHTML = `&lt;strong&gt;Gregorian Date:&lt;/strong&gt; ${g.gy}/${String(g.gm).padStart(2, &#39;0&#39;)}/${String(g.gd).padStart(2, &#39;0&#39;)}`;
  }

  function convertGregorianToJalali() {
    const input = document.getElementById(&#39;gregorianDate&#39;).value.trim();
    const resultDiv = document.getElementById(&#39;resultG2J&#39;);
    const errorDiv = document.getElementById(&#39;errorG2J&#39;);
    resultDiv.innerHTML = &#39;&#39;;
    errorDiv.innerHTML = &#39;&#39;;

    if (!isValidDateFormat(input)) {
      errorDiv.innerHTML = &#39;Invalid format. Use YYYY/MM/DD.&#39;;
      return;
    }

    const [gy, gm, gd] = input.split(&#39;/&#39;).map(Number);
    if (gm &lt; 1 || gm &gt; 12 || gd &lt; 1 || gd &gt; 31) {
      errorDiv.innerHTML = &#39;Invalid date values.&#39;;
      return;
    }

    const j = gregorianToJalali(gy, gm, gd);
    resultDiv.innerHTML = `&lt;strong&gt;Jalali Date:&lt;/strong&gt; ${j.jy}/${String(j.jm).padStart(2, &#39;0&#39;)}/${String(j.jd).padStart(2, &#39;0&#39;)}`;
  }

  document.getElementById(&#39;jalaliDate&#39;).addEventListener(&#39;keydown&#39;, function(event) {
    if (event.key === &#39;Enter&#39;) {
      event.preventDefault();
      convertJalaliToGregorian();
    }
  });

  document.getElementById(&#39;gregorianDate&#39;).addEventListener(&#39;keydown&#39;, function(event) {
    if (event.key === &#39;Enter&#39;) {
      event.preventDefault();
      convertGregorianToJalali();
    }
  });
&lt;/script&gt;</description>
    </item>
    <item>
      <title>Hello World</title>
      <link>http://localhost:1313/posts/hello-world/</link>
      <pubDate>Sat, 31 May 2025 12:00:00 +0330</pubDate>
      <guid>http://localhost:1313/posts/hello-world/</guid>
      <description>&lt;p&gt;Welcome to my very first post on &lt;strong&gt;m3hr4n.com&lt;/strong&gt;! 🎉&lt;/p&gt;
&lt;p&gt;This is where I will share insights about DevOps, cloud, AI, and other cool stuff.&lt;/p&gt;
&lt;p&gt;Stay tuned for more updates!&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/tools/ainews/ainews-v2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/tools/ainews/ainews-v2/</guid>
      <description></description>
    </item>
  </channel>
</rss>
